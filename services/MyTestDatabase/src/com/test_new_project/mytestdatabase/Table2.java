/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/
package com.test_new_project.mytestdatabase;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Table2 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`table2`")
public class Table2 implements Serializable {

    private Integer id;
    private Integer column2;
    private Table1 table1ByColumn2;
    private List<Table1> table1sForColumn2;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`column2`", nullable = true, scale = 0, precision = 10)
    public Integer getColumn2() {
        return this.column2;
    }

    public void setColumn2(Integer column2) {
        this.column2 = column2;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`column2`", referencedColumnName = "`id`", insertable = false, updatable = false)
    public Table1 getTable1ByColumn2() {
        return this.table1ByColumn2;
    }

    public void setTable1ByColumn2(Table1 table1ByColumn2) {
        if(table1ByColumn2 != null) {
            this.column2 = table1ByColumn2.getId();
        }

        this.table1ByColumn2 = table1ByColumn2;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "table2ByColumn2")
    public List<Table1> getTable1sForColumn2() {
        return this.table1sForColumn2;
    }

    public void setTable1sForColumn2(List<Table1> table1sForColumn2) {
        this.table1sForColumn2 = table1sForColumn2;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Table2)) return false;
        final Table2 table2 = (Table2) o;
        return Objects.equals(getId(), table2.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

